name: Deploy CDK Stack

# Set permissions required for AWS OIDC authentication
permissions:
  id-token: write
  contents: read

# Environment variables
env:
  AWS_REGION: us-east-1

# Trigger workflow on push to main
on:
  push:
    branches: [main]

jobs:
  # Build, lint, test, and diff CDK
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm test

      - name: CDK Diff
        run: npx cdk diff

  # Deploy to dev environment
  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials (Dev)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/<OIDC_ROLE_NAME>
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CDK to Dev
        run: npx cdk deploy --require-approval never

  # Deploy to prod with manual approval
  deploy-prod:
    if: github.ref == 'refs/heads/main'
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment:
      name: prod
      url: https://example.com
    steps:
      - name: Await manual approval
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Configure AWS credentials (Prod)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::<ACCOUNT_ID>:role/<OIDC_ROLE_NAME>
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy CDK to Prod
        run: npx cdk deploy --require-approval never
